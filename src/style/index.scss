@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "style";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

@import url(https://fonts.googleapis.com/css?family=Nunito+Sans:300,600,800&display=swap);
// Подключить если есть локальные файлы шрифтов
//@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройки шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================
body {
    &[data-theme='dark'] {
        --colors-text: hsl(0, 0%, 100%);
        --colors-bg: hsl(207, 26%, 17%);
        --colors-ui-base: hsl(209, 23%, 22%);

        --shadow: rgba(245, 245, 245, .2) 0 0 8px;
    }

    &[data-theme='light'] {
        --colors-text: hsl(200, 15%, 8%);
        --colors-bg: hsl(0, 0%, 90%);
        --colors-ui-base: hsl(0, 0%, 100%);

        --shadow: rgba(149, 157, 162, .2) 0 8px 24px;
    }
}

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Nunito Sans";
$fontSize: rem(20); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: var(--colors-text); // Цвет шрифта по умолчанию

// Настройки адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1600;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1240;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуление ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "null";

// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================
body {
    background: var(--colors-bg);
}



#root {
    min-height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    font-weight: 300;
    line-height: 1.2;

    // Прижимаем footer
    >main {
        flex: 1 1 auto;
        @include adaptiveValue("padding-bottom", 50, 30);
        @include adaptiveValue("padding-top", 50, 30);
        display: flex;
        justify-content: stretch;
    }

    // Фикс для слайдеров
    >* {
        min-width: 0;
    }
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================

.status-block {
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: 25px;
    grid-column: span 4;

    svg {
        width: 150px;
        height: 150px;
    }

    .status-title {
        font-weight: 800;
        @include adaptiveValue("font-size", 35, 25);
        color: var(--colors-text);
    }

}


// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {

    // Отзывчивая
    [class="container"] {
        @if ($maxWidthContainer>0) {
            max-width: rem($maxWidthContainer);
            box-sizing: content-box;
            margin: 0 auto;
            flex: 1 1 auto;
        }

        @if ($containerPadding>0) {
            padding: 0 rem(math.div($containerPadding, 2));
        }
    }
}

@else {

    // По брейк-поинтам
    [class="container"] {
        margin: 0 auto;

        @if ($maxWidthContainer>0) {
            max-width: rem($maxWidthContainer);
            box-sizing: content-box;
        }

        @else {
            @if ($containerPadding>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }

        @media (max-width: $pc) {
            max-width: rem(970);
        }

        @media (max-width: $tablet) {
            max-width: rem(750);
        }

        @media (max-width: $mobile) {
            max-width: none;

            @if ($containerPadding>0 and $maxWidthContainer>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }
    }
}